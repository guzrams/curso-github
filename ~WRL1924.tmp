Curso de Next.Js

Framework vs. Biblioteca

- React, es una biblioteca de javascript para construir interfaces de usuario. Se centra en la creación de componentes reutilizables e en la gestión de estado.
- Next.js, Es un framework construido sobre React que proporciona una serie de características adicionales y convenciones que facilitan el desarrollo de aplicaciones web, especialmente en la creación de aplicaciones del lado del servidor.

Renderizado.

- React, Principalmente se utiliza para el renderizado del lado del cliente (Client-Side-Rendering, CSR), lo que significa que el contenido se genera en el navegador del usuario.
- Next.js, Soporta múltiples métodos de renderizado, Renderizado del lado del servidor (SSR), Generación de sitios estáticos (SSG) y Renderizado del lado del cliente. 

Crear un proyecto en Next.js

- npx create-next-app nombreproyecto
- Las rutas en next, esta basado en el concepto de ruta de archivos
- Link, se usa para evitar refrescar la pagina
- Layout, es el archivo principal, que primero llama el proyecto
- Not Found, permite crear un archivo que controle los mensajes de error ya estilizados por uno mismo.
- Metadata, nos permite establecer los metadatas de búsqueda por servidores externos, como ser google, face, etc
- Fonts, permite configurar el tipo de letra.
- Read Server Components, permite establecer que elementos se están usando del lado del servidor o del proyecto (use client)
- Fetch data, permite llamar a un endpoint 
- Loading Page, permite generar un espacio de tiempo de lectura
- Params, permite ingresar parámetros en la función.
- Suspence, retarda el despliegue de la fragmento de la pagina.
- Alias, permite remplazar rutas relativas con el símbolo @., esta     configuración se encuentra en el archivo jsconfig.json.
- css,
- Route handlers params,
- Search params,
- Request Body,
- Corregir errores de corrida en next.js, 
1. Remove-Item -Recurse -Force .next
2. npm run build 
- Environment, variables (variables de entorno), 
- Nextjs CRUD Setup, 
- Instalar Prisma,
1. npm install prisma --save-dev o npm i prisma –D
2. npx prisma init --datasource-provider sqlite
3. Instalar extencion de prisma
4. crear el modelo de las tablas
5. migrar los modelos a la base de datos con, npx prisma migrate dev --name init
6. Instalar la extencion sqlite viewer
7. O ejecutar, npx prisma studio
- Nextjs RESTAPI, 
1. conectar a la base de datos,
Import {PrismaClient} from “@prisma/client”;
Export const prisma = new PrismaClient();

- Formulario, 
- Lista de tareas,
- Task Component,
- Editar Task,
- Delete Task,
- NavBar, 
- Dar formato a la pagina en VSCode, 
1. Presionar Ctl+Shit+P
2. Setting Json
3. en el archivo colocar “editor.formatOnSave”: true
- Deploy,
1. crear una base de datos en vercel.com, loguearse con cuenta github
2. se eligio la pestaña .env.local
3. show secret
4. elegir las líneas, POSTGRESQL_PRISMA_URL y POSTGRESQL_URL_NON_POOLING
5. copiar esas dos líneas en el archivo .env
6. ejecutar el comando, npx prisma migrate dev
7. en el archivo package.json, aumentar en el área de script, “postinstall”: “prisma generate”
8. luego ejecutar en la consola, npx prisma generate
9. instalar vercel con, npm install vercel –g o npm i vercel –g
10. escribir en la consola, vercel login
11. luego, vercel 


